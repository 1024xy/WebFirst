using SqlSugar;
using System.Collections.Generic;

namespace @Model.name_space
{
    /// <summary>
    /// 全局上下文，同上下文db共享
    /// </summary>
    public class DbContext
    {
        /// <summary>
        /// SqlSugarScope操作数据库是线程安的可以单例
        /// </summary>
        public static SqlSugarScope Scope = new SqlSugarScope(new ConnectionConfig()
        {
            DbType = SqlSugar.DbType.SqlServer,
            ConnectionString = "",
            IsAutoCloseConnection = true
        },
         db =>
         {
             //如果用单例配置要统一写在这儿
             db.Aop.OnLogExecuting = (s, p) =>
            {

            };

         });
    }
    /// <summary>
    /// 仓储
    /// </summary>
    /// <typeparam name="T"></typeparam>
    public class Repository<T> : SimpleClient<T> where T : class, new()
    {
        private SqlSugarScope Db= DbContext.Scope;
        public Repository(ISqlSugarClient context = null) : base(context)//注意这里要有默认值等于null
        {
            if (context == null)
            {
                base.Context = DbContext.Scope;
            }
        }

        ///// <summary>
        ///// 扩展方法，自带方法不能满足的时候可以添加新方法
        ///// </summary>
        ///// <returns></returns>
        //public List<T> CommQuery(string json)
        //{
        //    //base.Context.Queryable<T>().ToList();可以拿到SqlSugarClient 做复杂操作
        //    return null;
        //}

    }
}